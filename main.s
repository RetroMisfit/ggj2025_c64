;
; File generated by cc65 v 2.18 - N/A
;
	.fopt		compiler,"cc65 v 2.18 - N/A"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "main.c", 11572, 1737749623
	.dbg		file, "/opt/homebrew/Cellar/cc65/2.19/share/cc65/include/string.h", 5104, 1590865395
	.dbg		file, "/opt/homebrew/Cellar/cc65/2.19/share/cc65/include/stddef.h", 3057, 1590865395
	.dbg		file, "gfx/gfx.h", 13285, 1737749625
	.dbg		file, "gfx/sprites.h", 7512, 1737749625
	.dbg		file, "gfx/sprites_bw.h", 7889, 1737749625
	.forceimport	__STARTUP__
	.dbg		sym, "memset", "00", extern, "_memset"
	.dbg		sym, "init_audio", "00", extern, "_init_audio"
	.dbg		sym, "init_nmi", "00", extern, "_init_nmi"
	.dbg		sym, "start_music", "00", extern, "_start_music"
	.dbg		sym, "wait_raster", "00", extern, "_wait_raster"
	.import		_memset
	.export		_bmp
	.export		_sprites
	.export		_sprites_bw
	.import		_init_audio
	.import		_init_nmi
	.import		_start_music
	.import		_wait_raster
	.export		_enemies
	.export		_hw_wait
	.export		_i
	.export		_j
	.export		_k
	.export		__i
	.export		__j
	.export		__joy
	.export		_joy
	.export		_ptr
	.export		__ptr
	.export		_px
	.export		_py
	.export		_bx
	.export		_by
	.export		_wi
	.export		_bdir
	.export		_bnextdir
	.export		_sx
	.export		_sy
	.export		_si
	.export		_counter
	.export		_bg_x
	.export		_bg_y
	.export		_state
	.export		_score
	.export		_show_score
	.export		_hiscore
	.export		_show_hiscore
	.export		_print
	.export		_tmp
	.export		_print_number
	.export		_SPRITEX
	.export		_hw_read_input
	.export		_hw_set_screen_state
	.export		_draw
	.export		_blink
	.export		_fade
	.export		_main

.segment	"RODATA"

.segment	"CHAR"
_bmp:
	.byte	$1E
	.byte	$36
	.byte	$66
	.byte	$C6
	.byte	$FE
	.byte	$C6
	.byte	$C6
	.byte	$00
	.byte	$F8
	.byte	$CC
	.byte	$C4
	.byte	$FE
	.byte	$C6
	.byte	$C6
	.byte	$FC
	.byte	$00
	.byte	$7C
	.byte	$C6
	.byte	$C0
	.byte	$C0
	.byte	$C0
	.byte	$C6
	.byte	$7C
	.byte	$00
	.byte	$F8
	.byte	$CC
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$CC
	.byte	$F8
	.byte	$00
	.byte	$7C
	.byte	$C6
	.byte	$C0
	.byte	$F8
	.byte	$C0
	.byte	$66
	.byte	$3C
	.byte	$00
	.byte	$3E
	.byte	$60
	.byte	$C0
	.byte	$F8
	.byte	$C0
	.byte	$C0
	.byte	$C0
	.byte	$00
	.byte	$7C
	.byte	$C6
	.byte	$C0
	.byte	$DE
	.byte	$C6
	.byte	$66
	.byte	$3E
	.byte	$00
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$FE
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$00
	.byte	$7E
	.byte	$18
	.byte	$18
	.byte	$18
	.byte	$18
	.byte	$18
	.byte	$7E
	.byte	$00
	.byte	$0C
	.byte	$0C
	.byte	$06
	.byte	$06
	.byte	$C6
	.byte	$C6
	.byte	$7C
	.byte	$00
	.byte	$C6
	.byte	$C6
	.byte	$CC
	.byte	$F8
	.byte	$CC
	.byte	$C6
	.byte	$C6
	.byte	$00
	.byte	$60
	.byte	$60
	.byte	$C0
	.byte	$C0
	.byte	$C0
	.byte	$C6
	.byte	$FE
	.byte	$00
	.byte	$C6
	.byte	$EE
	.byte	$FE
	.byte	$D6
	.byte	$C6
	.byte	$E6
	.byte	$66
	.byte	$00
	.byte	$C6
	.byte	$E6
	.byte	$F6
	.byte	$DE
	.byte	$CE
	.byte	$E6
	.byte	$66
	.byte	$00
	.byte	$3C
	.byte	$66
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$7C
	.byte	$00
	.byte	$FC
	.byte	$C6
	.byte	$C6
	.byte	$FC
	.byte	$C0
	.byte	$E0
	.byte	$60
	.byte	$00
	.byte	$7C
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$CA
	.byte	$C4
	.byte	$7A
	.byte	$00
	.byte	$F8
	.byte	$CC
	.byte	$C6
	.byte	$FC
	.byte	$C6
	.byte	$C6
	.byte	$CC
	.byte	$00
	.byte	$3C
	.byte	$66
	.byte	$C0
	.byte	$7C
	.byte	$06
	.byte	$CC
	.byte	$78
	.byte	$00
	.byte	$7E
	.byte	$18
	.byte	$18
	.byte	$18
	.byte	$18
	.byte	$18
	.byte	$18
	.byte	$00
	.byte	$04
	.byte	$46
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$7C
	.byte	$00
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$6C
	.byte	$38
	.byte	$00
	.byte	$6C
	.byte	$EE
	.byte	$C6
	.byte	$C6
	.byte	$D6
	.byte	$EE
	.byte	$C6
	.byte	$00
	.byte	$C6
	.byte	$C6
	.byte	$6C
	.byte	$38
	.byte	$6C
	.byte	$C6
	.byte	$C6
	.byte	$00
	.byte	$CC
	.byte	$CC
	.byte	$CC
	.byte	$78
	.byte	$30
	.byte	$30
	.byte	$30
	.byte	$00
	.byte	$FE
	.byte	$0C
	.byte	$18
	.byte	$30
	.byte	$60
	.byte	$C0
	.byte	$FE
	.byte	$00
	.byte	$C6
	.byte	$BA
	.byte	$6C
	.byte	$C6
	.byte	$FE
	.byte	$C6
	.byte	$C6
	.byte	$00
	.byte	$C6
	.byte	$82
	.byte	$38
	.byte	$6E
	.byte	$C6
	.byte	$C6
	.byte	$7C
	.byte	$00
	.byte	$78
	.byte	$CC
	.byte	$E6
	.byte	$D6
	.byte	$CE
	.byte	$C6
	.byte	$7C
	.byte	$00
	.byte	$18
	.byte	$38
	.byte	$18
	.byte	$18
	.byte	$1C
	.byte	$0C
	.byte	$0C
	.byte	$00
	.byte	$78
	.byte	$CC
	.byte	$06
	.byte	$3C
	.byte	$60
	.byte	$C6
	.byte	$FE
	.byte	$00
	.byte	$78
	.byte	$CC
	.byte	$06
	.byte	$1C
	.byte	$06
	.byte	$C6
	.byte	$7C
	.byte	$00
	.byte	$16
	.byte	$36
	.byte	$66
	.byte	$FE
	.byte	$06
	.byte	$0E
	.byte	$0C
	.byte	$00
	.byte	$7C
	.byte	$C0
	.byte	$C0
	.byte	$FC
	.byte	$06
	.byte	$C6
	.byte	$7C
	.byte	$00
	.byte	$3C
	.byte	$66
	.byte	$C0
	.byte	$FC
	.byte	$C6
	.byte	$C6
	.byte	$7C
	.byte	$00
	.byte	$FE
	.byte	$C6
	.byte	$06
	.byte	$0C
	.byte	$18
	.byte	$30
	.byte	$60
	.byte	$00
	.byte	$7C
	.byte	$C6
	.byte	$C6
	.byte	$7C
	.byte	$C6
	.byte	$C6
	.byte	$7C
	.byte	$00
	.byte	$7C
	.byte	$C6
	.byte	$C6
	.byte	$7E
	.byte	$06
	.byte	$C6
	.byte	$7C
	.byte	$00
	.byte	$00
	.byte	$3F
	.byte	$7F
	.byte	$7D
	.byte	$78
	.byte	$72
	.byte	$65
	.byte	$72
	.byte	$00
	.byte	$FF
	.byte	$FF
	.byte	$55
	.byte	$00
	.byte	$AA
	.byte	$55
	.byte	$00
	.byte	$64
	.byte	$72
	.byte	$64
	.byte	$72
	.byte	$64
	.byte	$72
	.byte	$64
	.byte	$72
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$18
	.byte	$08
	.byte	$00
	.byte	$18
	.byte	$08
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$C0
	.byte	$E4
	.byte	$72
	.byte	$64
	.byte	$F2
	.byte	$64
	.byte	$72
	.byte	$72
	.byte	$65
	.byte	$72
	.byte	$78
	.byte	$7D
	.byte	$7F
	.byte	$3F
	.byte	$00
	.byte	$64
	.byte	$F2
	.byte	$E4
	.byte	$72
	.byte	$64
	.byte	$A0
	.byte	$40
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_sprites:
	.byte	$00
	.byte	$14
	.byte	$00
	.byte	$00
	.byte	$69
	.byte	$00
	.byte	$01
	.byte	$AA
	.byte	$40
	.byte	$02
	.byte	$96
	.byte	$80
	.byte	$01
	.byte	$69
	.byte	$80
	.byte	$05
	.byte	$AA
	.byte	$90
	.byte	$06
	.byte	$AA
	.byte	$90
	.byte	$0A
	.byte	$AA
	.byte	$A0
	.byte	$0A
	.byte	$AA
	.byte	$A0
	.byte	$0A
	.byte	$AA
	.byte	$A0
	.byte	$0A
	.byte	$AA
	.byte	$A0
	.byte	$0A
	.byte	$AA
	.byte	$A0
	.byte	$06
	.byte	$AA
	.byte	$90
	.byte	$05
	.byte	$55
	.byte	$50
	.byte	$05
	.byte	$55
	.byte	$50
	.byte	$05
	.byte	$55
	.byte	$50
	.byte	$01
	.byte	$55
	.byte	$40
	.byte	$01
	.byte	$55
	.byte	$40
	.byte	$01
	.byte	$55
	.byte	$40
	.byte	$00
	.byte	$55
	.byte	$00
	.byte	$00
	.byte	$14
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$14
	.byte	$00
	.byte	$00
	.byte	$69
	.byte	$00
	.byte	$01
	.byte	$AA
	.byte	$40
	.byte	$06
	.byte	$55
	.byte	$90
	.byte	$09
	.byte	$AA
	.byte	$60
	.byte	$0A
	.byte	$AA
	.byte	$A0
	.byte	$1A
	.byte	$AA
	.byte	$A4
	.byte	$2A
	.byte	$AA
	.byte	$A8
	.byte	$2A
	.byte	$AA
	.byte	$A8
	.byte	$2A
	.byte	$AA
	.byte	$A8
	.byte	$2A
	.byte	$AA
	.byte	$A8
	.byte	$1A
	.byte	$AA
	.byte	$A4
	.byte	$15
	.byte	$AA
	.byte	$54
	.byte	$05
	.byte	$55
	.byte	$50
	.byte	$05
	.byte	$55
	.byte	$50
	.byte	$05
	.byte	$55
	.byte	$50
	.byte	$01
	.byte	$55
	.byte	$40
	.byte	$00
	.byte	$55
	.byte	$00
	.byte	$00
	.byte	$14
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$69
	.byte	$00
	.byte	$01
	.byte	$AA
	.byte	$40
	.byte	$06
	.byte	$AA
	.byte	$90
	.byte	$19
	.byte	$55
	.byte	$64
	.byte	$26
	.byte	$AA
	.byte	$98
	.byte	$2A
	.byte	$AA
	.byte	$A8
	.byte	$6A
	.byte	$AA
	.byte	$A9
	.byte	$AA
	.byte	$AA
	.byte	$AA
	.byte	$AA
	.byte	$AA
	.byte	$AA
	.byte	$6A
	.byte	$AA
	.byte	$A9
	.byte	$5A
	.byte	$AA
	.byte	$A5
	.byte	$16
	.byte	$AA
	.byte	$94
	.byte	$15
	.byte	$69
	.byte	$54
	.byte	$15
	.byte	$55
	.byte	$54
	.byte	$05
	.byte	$55
	.byte	$50
	.byte	$01
	.byte	$55
	.byte	$40
	.byte	$00
	.byte	$55
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$14
	.byte	$00
	.byte	$00
	.byte	$69
	.byte	$00
	.byte	$01
	.byte	$AA
	.byte	$40
	.byte	$06
	.byte	$55
	.byte	$90
	.byte	$09
	.byte	$AA
	.byte	$60
	.byte	$0A
	.byte	$AA
	.byte	$A0
	.byte	$1A
	.byte	$AA
	.byte	$A4
	.byte	$2A
	.byte	$AA
	.byte	$A8
	.byte	$2A
	.byte	$AA
	.byte	$A8
	.byte	$2A
	.byte	$AA
	.byte	$A8
	.byte	$2A
	.byte	$AA
	.byte	$A8
	.byte	$1A
	.byte	$AA
	.byte	$A4
	.byte	$15
	.byte	$AA
	.byte	$54
	.byte	$05
	.byte	$55
	.byte	$50
	.byte	$05
	.byte	$55
	.byte	$50
	.byte	$05
	.byte	$55
	.byte	$50
	.byte	$01
	.byte	$55
	.byte	$40
	.byte	$00
	.byte	$55
	.byte	$00
	.byte	$00
	.byte	$14
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_sprites_bw:
	.byte	$00
	.byte	$7E
	.byte	$00
	.byte	$01
	.byte	$81
	.byte	$80
	.byte	$02
	.byte	$00
	.byte	$40
	.byte	$04
	.byte	$00
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$07
	.byte	$88
	.byte	$10
	.byte	$07
	.byte	$88
	.byte	$20
	.byte	$03
	.byte	$04
	.byte	$20
	.byte	$00
	.byte	$04
	.byte	$20
	.byte	$00
	.byte	$04
	.byte	$20
	.byte	$00
	.byte	$04
	.byte	$20
	.byte	$00
	.byte	$04
	.byte	$20
	.byte	$00
	.byte	$04
	.byte	$24
	.byte	$00
	.byte	$04
	.byte	$10
	.byte	$00
	.byte	$08
	.byte	$13
	.byte	$00
	.byte	$08
	.byte	$09
	.byte	$80
	.byte	$10
	.byte	$04
	.byte	$20
	.byte	$20
	.byte	$02
	.byte	$00
	.byte	$40
	.byte	$01
	.byte	$81
	.byte	$80
	.byte	$00
	.byte	$7E
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$7E
	.byte	$00
	.byte	$03
	.byte	$81
	.byte	$C0
	.byte	$04
	.byte	$00
	.byte	$20
	.byte	$08
	.byte	$00
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$07
	.byte	$84
	.byte	$20
	.byte	$07
	.byte	$84
	.byte	$40
	.byte	$03
	.byte	$02
	.byte	$40
	.byte	$00
	.byte	$02
	.byte	$40
	.byte	$00
	.byte	$02
	.byte	$40
	.byte	$00
	.byte	$02
	.byte	$48
	.byte	$00
	.byte	$02
	.byte	$20
	.byte	$00
	.byte	$04
	.byte	$26
	.byte	$00
	.byte	$04
	.byte	$13
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$40
	.byte	$10
	.byte	$04
	.byte	$00
	.byte	$20
	.byte	$03
	.byte	$81
	.byte	$C0
	.byte	$00
	.byte	$7E
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$C0
	.byte	$0C
	.byte	$00
	.byte	$30
	.byte	$10
	.byte	$00
	.byte	$08
	.byte	$20
	.byte	$03
	.byte	$04
	.byte	$40
	.byte	$07
	.byte	$82
	.byte	$80
	.byte	$07
	.byte	$81
	.byte	$80
	.byte	$03
	.byte	$01
	.byte	$80
	.byte	$00
	.byte	$01
	.byte	$90
	.byte	$00
	.byte	$01
	.byte	$80
	.byte	$00
	.byte	$01
	.byte	$4C
	.byte	$00
	.byte	$02
	.byte	$26
	.byte	$00
	.byte	$04
	.byte	$10
	.byte	$80
	.byte	$08
	.byte	$0C
	.byte	$00
	.byte	$30
	.byte	$03
	.byte	$00
	.byte	$C0
	.byte	$00
	.byte	$FF
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$7E
	.byte	$00
	.byte	$03
	.byte	$81
	.byte	$C0
	.byte	$04
	.byte	$00
	.byte	$20
	.byte	$08
	.byte	$00
	.byte	$10
	.byte	$10
	.byte	$01
	.byte	$88
	.byte	$20
	.byte	$03
	.byte	$C4
	.byte	$20
	.byte	$03
	.byte	$C4
	.byte	$40
	.byte	$01
	.byte	$82
	.byte	$40
	.byte	$00
	.byte	$02
	.byte	$40
	.byte	$00
	.byte	$02
	.byte	$40
	.byte	$00
	.byte	$02
	.byte	$48
	.byte	$00
	.byte	$02
	.byte	$20
	.byte	$00
	.byte	$04
	.byte	$26
	.byte	$00
	.byte	$04
	.byte	$13
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$40
	.byte	$10
	.byte	$04
	.byte	$00
	.byte	$20
	.byte	$03
	.byte	$81
	.byte	$C0
	.byte	$00
	.byte	$7E
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$38
	.byte	$00
	.byte	$00
	.byte	$44
	.byte	$00
	.byte	$00
	.byte	$92
	.byte	$00
	.byte	$01
	.byte	$39
	.byte	$00
	.byte	$01
	.byte	$7D
	.byte	$00
	.byte	$01
	.byte	$39
	.byte	$00
	.byte	$00
	.byte	$92
	.byte	$00
	.byte	$00
	.byte	$44
	.byte	$00
	.byte	$00
	.byte	$38
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
.segment	"RODATA"
_blink:
	.byte	$01
	.byte	$0F
	.byte	$0C
	.byte	$0B
	.byte	$0B
	.byte	$0C
	.byte	$0F
	.byte	$01
_fade:
	.byte	$06
	.byte	$02
	.byte	$07
	.byte	$01
L076C:
	.byte	$4D,$49,$4B,$41,$20,$4D,$49,$53,$46,$49,$54,$20,$4B,$45,$52,$5B
	.byte	$4E,$45,$4E,$20,$50,$52,$45,$53,$45,$4E,$54,$53,$00
L077E:
	.byte	$53,$48,$4F,$4F,$54,$20,$41,$4C,$4C,$20,$54,$48,$4F,$53,$45,$20
	.byte	$45,$56,$49,$4C,$20,$42,$55,$42,$42,$4C,$45,$53,$00
L0772:
	.byte	$20,$47,$4C,$4F,$42,$41,$4C,$20,$47,$41,$4D,$45,$20,$4A,$41,$4D
	.byte	$20,$32,$30,$32,$35,$20,$47,$41,$4D,$45,$00
L0778:
	.byte	$20,$20,$20,$20,$20,$4C,$45,$20,$42,$55,$42,$42,$4C,$5C,$20,$4D
	.byte	$41,$53,$53,$41,$43,$52,$5C,$20,$00
L07D0:
	.byte	$20,$20,$20,$20,$20,$50,$52,$45,$53,$53,$20,$46,$49,$52,$45,$20
	.byte	$42,$55,$54,$54,$4F,$4E,$20,$00
L07D6:
	.byte	$53,$43,$4F,$52,$45,$3A,$30,$30,$30,$00
L07DC:
	.byte	$30,$30,$30,$3A,$48,$49,$00

.segment	"BSS"

_enemies:
	.res	30,$00
_i:
	.res	1,$00
_j:
	.res	1,$00
_k:
	.res	1,$00
__i:
	.res	1,$00
__j:
	.res	1,$00
__joy:
	.res	1,$00
_joy:
	.res	1,$00
_ptr:
	.res	2,$00
__ptr:
	.res	2,$00
_px:
	.res	2,$00
_py:
	.res	2,$00
_bx:
	.res	2,$00
_by:
	.res	2,$00
_wi:
	.res	2,$00
_bdir:
	.res	1,$00
_bnextdir:
	.res	1,$00
_sx:
	.res	1,$00
_sy:
	.res	1,$00
_si:
	.res	1,$00
_counter:
	.res	1,$00
_bg_x:
	.res	1,$00
_bg_y:
	.res	1,$00
_state:
	.res	1,$00
_score:
	.res	1,$00
_show_score:
	.res	1,$00
_hiscore:
	.res	1,$00
_show_hiscore:
	.res	1,$00
_tmp:
	.res	4,$00

; ---------------------------------------------------------------
; void __near__ hw_wait (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_hw_wait: near

	.dbg	func, "hw_wait", "00", extern, "_hw_wait"
	.dbg	sym, "_line", "00", auto, 0

.segment	"CODE"

	.dbg	line, "main.c", 53
	jsr     pusha
L0606:	ldy     #$00
	lda     (sp),y
	sta     $033C
	jsr     _wait_raster
	lda     $D011
	and     #$80
	bne     L0606
	jmp     incsp1
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ print (unsigned char, unsigned char, unsigned char, __near__ const unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_print: near

	.dbg	func, "print", "00", extern, "_print"
	.dbg	sym, "x", "00", auto, 4
	.dbg	sym, "y", "00", auto, 3
	.dbg	sym, "col", "00", auto, 2
	.dbg	sym, "txt", "00", auto, 0

.segment	"RODATA"

L0633:
	.word	$0000

.segment	"CODE"

	.dbg	line, "main.c", 99
	jsr     pushax
	.dbg	line, "main.c", 100
	ldy     #$04
	lda     (sp),y
	pha
	lda     #$00
	clc
	adc     #$C8
	tax
	pla
	jsr     pushax
	ldy     #$05
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     tosaddax
	sta     _ptr
	stx     _ptr+1
	.dbg	line, "main.c", 102
L0614:	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     (ptr1),y
	sta     __i
	.dbg	line, "main.c", 103
	cmp     #$41
	bcc     L0A04
	lda     __i
	cmp     #$5E
	bcs     L0A04
	sec
	sbc     #$41
	sta     __i
	.dbg	line, "main.c", 104
	jmp     L061F
L0A04:	lda     __i
	cmp     #$30
	bcc     L0A08
	cmp     #$3A
	bcs     L0A08
	sec
	sbc     #$30
	clc
	adc     #$1C
	sta     __i
	.dbg	line, "main.c", 105
	jmp     L061F
L0A08:	lda     __i
	cmp     #$3A
	bcc     L0A09
	lda     #$2A
	sta     __i
	.dbg	line, "main.c", 106
	jmp     L061F
L0A09:	lda     __i
	cmp     #$20
	ldx     #$00
	bcs     L0A0B
	.dbg	line, "main.c", 107
L061F:	lda     _ptr
	ldx     _ptr+1
	jsr     pushax
	ldy     #$04
	lda     (sp),y
	ldy     #$01
	clc
	pha
	lda     #$10
	adc     (sp),y
	sta     (sp),y
	pla
	dey
	jsr     staspidx
	.dbg	line, "main.c", 108
	lda     _ptr+1
	sta     ptr1+1
	lda     _ptr
	sta     ptr1
	lda     __i
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "main.c", 110
	ldx     #$00
L0A0B:	lda     #$01
	jsr     addeq0sp
	.dbg	line, "main.c", 111
	inc     _ptr
	bne     L063D
	inc     _ptr+1
	.dbg	line, "main.c", 112
L063D:	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     (ptr1),y
	jne     L0614
	.dbg	line, "main.c", 113
	jmp     incsp5
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ print_number (unsigned char, unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_print_number: near

	.dbg	func, "print_number", "00", extern, "_print_number"
	.dbg	sym, "x", "00", auto, 2
	.dbg	sym, "y", "00", auto, 1
	.dbg	sym, "num", "00", auto, 0

.segment	"CODE"

	.dbg	line, "main.c", 117
	jsr     pusha
	.dbg	line, "main.c", 118
	lda     #$30
	sta     _tmp
	.dbg	line, "main.c", 119
	sta     _tmp+1
	.dbg	line, "main.c", 120
	sta     _tmp+2
	.dbg	line, "main.c", 121
	lda     #$00
	sta     _tmp+3
	.dbg	line, "main.c", 122
	jmp     L0651
L0A0C:	inc     _tmp
	ldy     #$00
	lda     (sp),y
	sec
	sbc     #$64
	sta     (sp),y
L0651:	ldy     #$00
	lda     (sp),y
	cmp     #$65
	bcs     L0A0C
	.dbg	line, "main.c", 123
	jmp     L0A0F
L0A0D:	inc     _tmp+1
	ldy     #$00
	lda     (sp),y
	sec
	sbc     #$0A
	sta     (sp),y
L0A0F:	lda     (sp),y
	cmp     #$0B
	bcs     L0A0D
	.dbg	line, "main.c", 124
	clc
	adc     _tmp+2
	sta     _tmp+2
	.dbg	line, "main.c", 125
	jsr     decsp3
	ldy     #$05
	lda     (sp),y
	ldy     #$02
	sta     (sp),y
	ldy     #$04
	lda     (sp),y
	ldy     #$01
	sta     (sp),y
	lda     #$08
	dey
	sta     (sp),y
	lda     #<(_tmp)
	ldx     #>(_tmp)
	jsr     _print
	.dbg	line, "main.c", 126
	jmp     incsp3
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ SPRITEX (unsigned char, unsigned short)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_SPRITEX: near

	.dbg	func, "SPRITEX", "00", extern, "_SPRITEX"
	.dbg	sym, "id", "00", auto, 2
	.dbg	sym, "x", "00", auto, 0

.segment	"CODE"

	.dbg	line, "main.c", 132
	jsr     pushax
	.dbg	line, "main.c", 134
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	asl     a
	bcc     L0A10
	inx
L0A10:	sta     ptr1
	txa
	clc
	adc     #$D0
	sta     ptr1+1
	ldy     #$00
	lda     (sp),y
	sta     (ptr1),y
	.dbg	line, "main.c", 135
	ldy     #$02
	lda     (sp),y
	tay
	lda     #$01
L0A11:	asl     a
	dey
	bpl     L0A11
	ror     a
	sta     __j
	.dbg	line, "main.c", 136
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$00
	txa
	sbc     #$01
	bcc     L0A13
	.dbg	line, "main.c", 138
	lda     __j
	ora     $D010
	.dbg	line, "main.c", 140
	jmp     L0A15
	.dbg	line, "main.c", 142
L0A13:	lda     __j
	eor     #$FF
	and     $D010
L0A15:	sta     __i
	.dbg	line, "main.c", 144
	sta     $D010
	.dbg	line, "main.c", 145
	jmp     incsp3
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ hw_read_input (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_hw_read_input: near

	.dbg	func, "hw_read_input", "00", extern, "_hw_read_input"

.segment	"CODE"

	.dbg	line, "main.c", 153
	lda     #$00
	sta     _joy
	.dbg	line, "main.c", 154
	lda     $DC00
	sta     __joy
	.dbg	line, "main.c", 155
	and     #$02
	bne     L0A16
	lda     _joy
	ora     #$02
	sta     _joy
	.dbg	line, "main.c", 156
L0A16:	lda     __joy
	and     #$01
	bne     L0A17
	lda     _joy
	ora     #$01
	sta     _joy
	.dbg	line, "main.c", 157
L0A17:	lda     __joy
	and     #$04
	bne     L0A18
	lda     _joy
	ora     #$04
	sta     _joy
	.dbg	line, "main.c", 158
L0A18:	lda     __joy
	and     #$08
	bne     L0A19
	lda     _joy
	ora     #$08
	sta     _joy
	.dbg	line, "main.c", 159
L0A19:	lda     __joy
	and     #$10
	bne     L0A1A
	lda     _joy
	ora     #$10
	sta     _joy
	.dbg	line, "main.c", 160
L0A1A:	lda     $DC01
	sta     __joy
	.dbg	line, "main.c", 161
	and     #$02
	bne     L0A1B
	lda     _joy
	ora     #$02
	sta     _joy
	.dbg	line, "main.c", 162
L0A1B:	lda     __joy
	and     #$01
	bne     L0A1C
	lda     _joy
	ora     #$01
	sta     _joy
	.dbg	line, "main.c", 163
L0A1C:	lda     __joy
	and     #$04
	bne     L0A1D
	lda     _joy
	ora     #$04
	sta     _joy
	.dbg	line, "main.c", 164
L0A1D:	lda     __joy
	and     #$08
	bne     L0A1E
	lda     _joy
	ora     #$08
	sta     _joy
	.dbg	line, "main.c", 165
L0A1E:	lda     __joy
	and     #$10
	bne     L06B3
	lda     _joy
	ora     #$10
	sta     _joy
	.dbg	line, "main.c", 166
L06B3:	rts
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ hw_set_screen_state (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_hw_set_screen_state: near

	.dbg	func, "hw_set_screen_state", "00", extern, "_hw_set_screen_state"
	.dbg	sym, "state", "00", auto, 0

.segment	"CODE"

	.dbg	line, "main.c", 169
	jsr     pusha
	.dbg	line, "main.c", 170
	lda     $D011
	sta     __i
	.dbg	line, "main.c", 171
	ldy     #$00
	lda     (sp),y
	bne     L0A20
	.dbg	line, "main.c", 173
	lda     __i
	and     #$EF
	.dbg	line, "main.c", 175
	jmp     L0A1F
	.dbg	line, "main.c", 177
L0A20:	lda     __i
	ora     #$10
L0A1F:	sta     __i
	.dbg	line, "main.c", 179
	sta     $D011
	.dbg	line, "main.c", 180
	jmp     incsp1
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ draw (unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw: near

	.dbg	func, "draw", "00", extern, "_draw"
	.dbg	sym, "id", "00", auto, 5
	.dbg	sym, "col", "00", auto, 4
	.dbg	sym, "x", "00", auto, 3
	.dbg	sym, "y", "00", auto, 2
	.dbg	sym, "w", "00", auto, 1
	.dbg	sym, "h", "00", auto, 0

.segment	"CODE"

	.dbg	line, "main.c", 183
	jsr     pusha
	.dbg	line, "main.c", 184
	ldy     #$03
	lda     (sp),y
	pha
	lda     #$00
	clc
	adc     #$C8
	tax
	pla
	jsr     pushax
	ldy     #$04
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     tosaddax
	sta     _ptr
	stx     _ptr+1
	.dbg	line, "main.c", 186
L06CA:	lda     _ptr
	ldx     _ptr+1
	jsr     pushax
	ldy     #$07
	lda     (sp),y
	jsr     pusha0
	ldy     #$05
	lda     (sp),y
	jsr     _memset
	.dbg	line, "main.c", 187
	lda     _ptr
	pha
	lda     _ptr+1
	clc
	adc     #$10
	tax
	pla
	jsr     pushax
	ldy     #$06
	lda     (sp),y
	jsr     pusha0
	ldy     #$05
	lda     (sp),y
	jsr     _memset
	.dbg	line, "main.c", 188
	ldy     #$00
	lda     (sp),y
	sec
	sbc     #$01
	sta     (sp),y
	.dbg	line, "main.c", 189
	lda     (sp),y
	beq     L06D7
	.dbg	line, "main.c", 191
	lda     #$28
	clc
	adc     _ptr
	sta     _ptr
	bcc     L06CA
	inc     _ptr+1
	.dbg	line, "main.c", 192
	jmp     L06CA
	.dbg	line, "main.c", 194
L06D7:	jmp     incsp6
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

	.dbg	func, "main", "00", extern, "_main"

.segment	"CODE"

	.dbg	line, "main.c", 202
	lda     #$04
	sta     $0288
	.dbg	line, "main.c", 203
	lda     $DD00
	and     #$FC
	sta     $DD00
	.dbg	line, "main.c", 204
	lda     #$35
	sta     $0001
	.dbg	line, "main.c", 205
	ldx     #$02
	lda     #$00
	sta     ptr1
	stx     ptr1+1
	tay
L0A22:	sta     (ptr1),y
	iny
	cpy     #$FD
	bne     L0A22
	.dbg	line, "main.c", 206
	lda     #$0F
	sta     $D020
	.dbg	line, "main.c", 211
	lda     #$00
	jsr     _hw_set_screen_state
	.dbg	line, "main.c", 212
	lda     #$20
	sta     $D018
	.dbg	line, "main.c", 213
	lda     #$00
	sta     $D021
	.dbg	line, "main.c", 214
	lda     #$0B
	sta     $D022
	.dbg	line, "main.c", 215
	lda     #$01
	sta     $D023
	.dbg	line, "main.c", 216
	lda     #$02
	sta     $D024
	.dbg	line, "main.c", 217
	lda     #$00
	sta     $D015
	.dbg	line, "main.c", 218
	sta     $D017
	.dbg	line, "main.c", 219
	sta     $D01D
	.dbg	line, "main.c", 220
	lda     #$01
	sta     $D01C
	.dbg	line, "main.c", 222
	lda     #$00
	sta     $D01B
	.dbg	line, "main.c", 224
	lda     #$0F
	sta     $D025
	.dbg	line, "main.c", 225
	lda     #$0C
	sta     $D026
	.dbg	line, "main.c", 227
	ldx     #$01
	lda     #$48
	sta     _px
	stx     _px+1
	.dbg	line, "main.c", 228
	dex
	lda     #$86
	sta     _py
	stx     _py+1
	.dbg	line, "main.c", 229
	lda     $D015
	ora     #$01
	sta     $D015
	.dbg	line, "main.c", 230
	lda     #$0F
	sta     $CBF8
	.dbg	line, "main.c", 231
	lda     #$01
	sta     $D027
	.dbg	line, "main.c", 239
	jsr     _init_nmi
	.dbg	line, "main.c", 240
	jsr     _init_audio
	.dbg	line, "main.c", 241
	jsr     _start_music
	.dbg	line, "main.c", 242
	lda     #$00
	sta     _score
	lda     #$32
	sta     _show_score
	.dbg	line, "main.c", 243
	lda     #$00
	sta     _hiscore
	lda     #$32
	sta     _show_hiscore
	.dbg	line, "main.c", 245
	lda     #$00
	sta     $D021
	.dbg	line, "main.c", 246
	ldx     #$C8
	jsr     pushax
	lda     #$29
	jsr     pusha0
	ldx     #$03
	lda     #$E8
	jsr     _memset
	.dbg	line, "main.c", 247
	ldx     #$D8
	lda     #$00
	jsr     pushax
	lda     #$06
	jsr     pusha0
	ldx     #$03
	lda     #$E8
	jsr     _memset
	.dbg	line, "main.c", 248
	jsr     decsp3
	lda     #$06
	ldy     #$02
	sta     (sp),y
	lda     #$0B
	dey
	sta     (sp),y
	tya
	dey
	sta     (sp),y
	lda     #<(L076C)
	ldx     #>(L076C)
	jsr     _print
	.dbg	line, "main.c", 249
	jsr     decsp3
	lda     #$06
	ldy     #$02
	sta     (sp),y
	lda     #$0D
	dey
	sta     (sp),y
	lda     #$02
	dey
	sta     (sp),y
	lda     #<(L0772)
	ldx     #>(L0772)
	jsr     _print
	.dbg	line, "main.c", 250
	jsr     decsp3
	lda     #$06
	ldy     #$02
	sta     (sp),y
	lda     #$0F
	dey
	sta     (sp),y
	lda     #$07
	dey
	sta     (sp),y
	lda     #<(L0778)
	ldx     #>(L0778)
	jsr     _print
	.dbg	line, "main.c", 251
	jsr     decsp3
	lda     #$06
	ldy     #$02
	sta     (sp),y
	lda     #$11
	dey
	sta     (sp),y
	lda     #$02
	dey
	sta     (sp),y
	lda     #<(L077E)
	ldx     #>(L077E)
	jsr     _print
	.dbg	line, "main.c", 253
	jsr     decsp5
	lda     #$26
	ldy     #$04
	sta     (sp),y
	lda     #$07
	dey
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	dey
	sta     (sp),y
	tya
	dey
	sta     (sp),y
	jsr     _draw
	.dbg	line, "main.c", 254
	jsr     decsp5
	lda     #$2B
	ldy     #$04
	sta     (sp),y
	lda     #$07
	dey
	sta     (sp),y
	lda     #$27
	dey
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	tya
	dey
	sta     (sp),y
	jsr     _draw
	.dbg	line, "main.c", 255
	jsr     decsp5
	lda     #$2C
	ldy     #$04
	sta     (sp),y
	lda     #$07
	dey
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$18
	dey
	sta     (sp),y
	tya
	dey
	sta     (sp),y
	jsr     _draw
	.dbg	line, "main.c", 256
	jsr     decsp5
	lda     #$2D
	ldy     #$04
	sta     (sp),y
	lda     #$07
	dey
	sta     (sp),y
	lda     #$27
	dey
	sta     (sp),y
	lda     #$18
	dey
	sta     (sp),y
	tya
	dey
	sta     (sp),y
	jsr     _draw
	.dbg	line, "main.c", 258
	jsr     decsp5
	lda     #$27
	ldy     #$04
	sta     (sp),y
	lda     #$07
	dey
	sta     (sp),y
	lda     #$01
	dey
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$26
	dey
	sta     (sp),y
	lda     #$01
	jsr     _draw
	.dbg	line, "main.c", 259
	jsr     decsp5
	lda     #$27
	ldy     #$04
	sta     (sp),y
	lda     #$07
	dey
	sta     (sp),y
	lda     #$01
	dey
	sta     (sp),y
	lda     #$18
	dey
	sta     (sp),y
	lda     #$26
	dey
	sta     (sp),y
	lda     #$01
	jsr     _draw
	.dbg	line, "main.c", 260
	jsr     decsp5
	lda     #$28
	ldy     #$04
	sta     (sp),y
	lda     #$07
	dey
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	lda     #$01
	dey
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$17
	jsr     _draw
	.dbg	line, "main.c", 261
	jsr     decsp5
	lda     #$28
	ldy     #$04
	sta     (sp),y
	lda     #$07
	dey
	sta     (sp),y
	lda     #$27
	dey
	sta     (sp),y
	lda     #$01
	dey
	sta     (sp),y
	dey
	sta     (sp),y
	lda     #$17
	jsr     _draw
	.dbg	line, "main.c", 263
	lda     #$00
	sta     _state
	sta     _counter
	.dbg	line, "main.c", 264
	jsr     decsp3
	lda     #$06
	ldy     #$02
	sta     (sp),y
	lda     #$16
	dey
	sta     (sp),y
	lda     #$07
	dey
	sta     (sp),y
	lda     #<(L07D0)
	ldx     #>(L07D0)
	jsr     _print
	.dbg	line, "main.c", 265
	jsr     decsp3
	lda     #$03
	ldy     #$02
	sta     (sp),y
	lda     #$18
	dey
	sta     (sp),y
	tya
	dey
	sta     (sp),y
	lda     #<(L07D6)
	ldx     #>(L07D6)
	jsr     _print
	.dbg	line, "main.c", 266
	jsr     decsp3
	lda     #$1F
	ldy     #$02
	sta     (sp),y
	lda     #$18
	dey
	sta     (sp),y
	tya
	dey
	sta     (sp),y
	lda     #<(L07DC)
	ldx     #>(L07DC)
	jsr     _print
	.dbg	line, "main.c", 268
	lda     #$FE
	sta     _sx
	.dbg	line, "main.c", 269
	lda     #$00
	sta     _sy
	.dbg	line, "main.c", 270
	lda     $D015
	ora     #$02
	sta     $D015
	.dbg	line, "main.c", 271
	lda     #$17
	sta     $CBF9
	.dbg	line, "main.c", 272
	lda     #$0F
	sta     $D028
	.dbg	line, "main.c", 274
	lda     #$01
	sta     _bdir
	.dbg	line, "main.c", 275
	sta     _bnextdir
	.dbg	line, "main.c", 276
	ldx     #$1F
	lda     #$FF
	sta     _bx
	stx     _bx+1
	.dbg	line, "main.c", 278
	lda     #$00
	sta     _i
	.dbg	line, "main.c", 280
	tax
L0A31:	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	sta     ptr1
	txa
	adc     #>(_enemies)
	sta     ptr1+1
	lda     #$FF
	ldy     #$00
	sta     (ptr1),y
	iny
	lda     #$1F
	sta     (ptr1),y
	.dbg	line, "main.c", 281
	ldx     #$00
	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	sta     ptr1
	txa
	adc     #>(_enemies)
	sta     ptr1+1
	lda     #$00
	ldy     #$04
	sta     (ptr1),y
	.dbg	line, "main.c", 282
	tax
	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	sta     ptr1
	txa
	adc     #>(_enemies)
	sta     ptr1+1
	lda     #$00
	iny
	sta     (ptr1),y
	.dbg	line, "main.c", 283
	inc     _i
	tax
	lda     _i
	cmp     #$05
	bne     L0A31
	.dbg	line, "main.c", 285
	lda     #$14
	sta     _enemies
	stx     _enemies+1
	.dbg	line, "main.c", 286
	lda     #$33
	sta     _enemies+2
	stx     _enemies+2+1
	.dbg	line, "main.c", 287
	lda     $D015
	ora     #$04
	sta     $D015
	.dbg	line, "main.c", 288
	lda     #$13
	sta     $CBFA
	.dbg	line, "main.c", 289
	lda     #$07
	sta     $D029
	.dbg	line, "main.c", 291
	lda     #$01
	jsr     _hw_set_screen_state
	.dbg	line, "main.c", 294
L0A32:	lda     #$00
	sta     $D020
	.dbg	line, "main.c", 295
	lda     #$FA
	jsr     _hw_wait
	.dbg	line, "main.c", 296
	lda     #$01
	sta     $D020
	.dbg	line, "main.c", 297
	lda     #$00
	jsr     pusha
	lda     _px
	ldx     _px+1
	jsr     shrax1
	jsr     _SPRITEX
	.dbg	line, "main.c", 298
	lda     _py
	ldx     _py+1
	jsr     shrax1
	sta     $D001
	.dbg	line, "main.c", 299
	jsr     _hw_read_input
	.dbg	line, "main.c", 300
	lda     _counter
	and     #$03
	bne     L0A3A
	.dbg	line, "main.c", 302
	lda     _joy
	and     #$04
	beq     L0A34
	.dbg	line, "main.c", 304
	lda     _sx
	sec
	sbc     #$FD
	bvs     L0846
	eor     #$80
L0846:	bpl     L0A33
	dec     _sx
	.dbg	line, "main.c", 305
L0A33:	lda     #$04
	.dbg	line, "main.c", 307
	jmp     L0A26
L0A34:	lda     _joy
	and     #$08
	beq     L0A36
	.dbg	line, "main.c", 309
	lda     _sx
	sec
	sbc     #$04
	bvc     L0851
	eor     #$80
L0851:	bpl     L0A35
	inc     _sx
	.dbg	line, "main.c", 310
L0A35:	lda     #$08
L0A26:	sta     _bnextdir
	.dbg	line, "main.c", 312
L0A36:	lda     _joy
	and     #$01
	beq     L0A38
	.dbg	line, "main.c", 314
	lda     _sy
	sec
	sbc     #$FD
	bvs     L085B
	eor     #$80
L085B:	bpl     L0A37
	dec     _sy
	.dbg	line, "main.c", 315
L0A37:	lda     #$01
	.dbg	line, "main.c", 317
	jmp     L0A27
L0A38:	lda     _joy
	and     #$02
	beq     L0A3A
	.dbg	line, "main.c", 319
	lda     _sy
	sec
	sbc     #$04
	bvc     L0866
	eor     #$80
L0866:	bpl     L0A39
	inc     _sy
	.dbg	line, "main.c", 320
L0A39:	lda     #$02
L0A27:	sta     _bnextdir
	.dbg	line, "main.c", 324
L0A3A:	lda     _joy
	ldx     #$00
	and     #$10
	beq     L0A3D
	.dbg	line, "main.c", 327
	lda     _state
	cmp     #$01
	bne     L0A3D
	lda     _bx+1
	cmp     #$1F
	bne     L0A3D
	lda     _bx
	cmp     #$FF
	bne     L0A3D
	.dbg	line, "main.c", 329
	lda     _px+1
	lsr     a
	sta     _bx+1
	lda     _px
	ror     a
	sta     _bx
	.dbg	line, "main.c", 330
	lda     _py+1
	lsr     a
	sta     _by+1
	lda     _py
	ror     a
	sta     _by
	.dbg	line, "main.c", 331
	lda     _bnextdir
	sta     _bdir
	.dbg	line, "main.c", 332
	lda     $D015
	ora     #$02
	sta     $D015
	.dbg	line, "main.c", 335
L0A3D:	lda     _sx
	cmp     #$80
	bcc     L0A2E
	dex
	clc
L0A2E:	adc     _px
	sta     _px
	txa
	adc     _px+1
	sta     _px+1
	.dbg	line, "main.c", 336
	cmp     #$00
	bne     L0888
	lda     _px
	cmp     #$38
	.dbg	line, "main.c", 340
L0888:	bcc     L0A6B
	lda     _px
	cmp     #$6F
	lda     _px+1
	sbc     #$02
	ldx     #$00
	bcc     L0A3F
	.dbg	line, "main.c", 342
L0A6B:	lda     _sx
	eor     #$FF
	clc
	adc     #$01
	sta     _sx
	.dbg	line, "main.c", 344
	ldx     #$00
L0A3F:	lda     _sy
	cmp     #$80
	bcc     L0A2F
	dex
	clc
L0A2F:	adc     _py
	sta     _py
	txa
	adc     _py+1
	sta     _py+1
	.dbg	line, "main.c", 345
	cmp     #$00
	bne     L089F
	lda     _py
	cmp     #$76
	.dbg	line, "main.c", 349
L089F:	bcc     L0A6C
	lda     _py
	cmp     #$BD
	lda     _py+1
	sbc     #$01
	bcc     L0A41
	.dbg	line, "main.c", 351
L0A6C:	lda     _sy
	eor     #$FF
	clc
	adc     #$01
	sta     _sy
	.dbg	line, "main.c", 353
L0A41:	inc     _counter
	.dbg	line, "main.c", 354
	lda     _counter
	lsr     a
	lsr     a
	and     #$03
	sta     _j
	.dbg	line, "main.c", 355
	clc
	adc     #$0F
	sta     $CBF8
	.dbg	line, "main.c", 357
	lda     _bg_y
	lsr     a
	lsr     a
	sta     _i
	.dbg	line, "main.c", 358
	clc
	adc     #$48
	sta     ptr1
	lda     #$00
	adc     #$C1
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
	.dbg	line, "main.c", 359
	lda     _state
	bne     L0A42
	.dbg	line, "main.c", 362
	inc     _bg_y
	.dbg	line, "main.c", 364
L0A42:	lda     _sy
	clc
	adc     _bg_y
	sta     _bg_y
	and     #$1F
	sta     _bg_y
	.dbg	line, "main.c", 365
	lsr     a
	lsr     a
	sta     _i
	.dbg	line, "main.c", 367
	lda     _sx
	clc
	adc     _bg_x
	sta     _bg_x
	and     #$1F
	sta     _bg_x
	.dbg	line, "main.c", 368
	lsr     a
	lsr     a
	tay
	lda     #$80
L0A25:	lsr     a
	dey
	bpl     L0A25
	rol     a
	sta     _j
	.dbg	line, "main.c", 369
	lda     _i
	clc
	adc     #$48
	sta     ptr1
	lda     #$00
	adc     #$C1
	sta     ptr1+1
	lda     _j
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "main.c", 371
	lda     _state
	cmp     #$03
	jne     L0A55
	.dbg	line, "main.c", 373
	lda     _counter
	and     #$07
	bne     L0A4A
	.dbg	line, "main.c", 375
	lda     _sy
	asl     a
	bcc     L0A47
	inc     _sy
	bpl     L0A48
	.dbg	line, "main.c", 376
	jmp     L0A48
L0A47:	lda     _sy
	sec
	sbc     #$01
	bvs     L08E7
	eor     #$80
L08E7:	bpl     L0A48
	dec     _sy
	.dbg	line, "main.c", 377
L0A48:	lda     _sx
	asl     a
	bcc     L0A49
	inc     _sx
	bpl     L0A4A
	.dbg	line, "main.c", 378
	jmp     L0A4A
L0A49:	lda     _sx
	sec
	sbc     #$01
	bvs     L08F3
	eor     #$80
L08F3:	bpl     L0A4A
	dec     _sx
	.dbg	line, "main.c", 380
L0A4A:	lda     _counter
	lsr     a
	sta     _i
	.dbg	line, "main.c", 381
	cmp     #$1B
	tya
	bcc     L0A4C
	.dbg	line, "main.c", 383
	lda     _sx
	jne     L095E
	lda     _sy
	jne     L095E
	.dbg	line, "main.c", 385
	lda     #$01
	.dbg	line, "main.c", 388
	jmp     L0A6D
	.dbg	line, "main.c", 390
L0A4C:	sta     _j
	.dbg	line, "main.c", 391
	lda     _counter
	sta     _i
	.dbg	line, "main.c", 393
	clc
	adc     #$FE
	pha
	tya
	adc     #$FF
	pla
	clc
	adc     _j
	sta     _k
	.dbg	line, "main.c", 394
	lda     _k
	beq     L0A51
	cmp     #$18
	bcs     L0A64
	.dbg	line, "main.c", 396
	lda     _k
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	clc
	adc     #$01
	pha
	txa
	adc     #$D8
	tax
	pla
	jsr     pushax
	ldy     _j
	lda     _fade,y
	jsr     pusha0
	lda     #$26
	jsr     _memset
	.dbg	line, "main.c", 399
L0A64:	lda     #$00
L0A51:	sta     _k
	.dbg	line, "main.c", 400
	tax
	lda     _i
	clc
	adc     #$01
	bcc     L091F
	inx
L091F:	jsr     shlax3
	clc
	adc     #$33
	bcc     L0920
	inx
L0920:	jsr     shlax1
	sta     _wi
	stx     _wi+1
	.dbg	line, "main.c", 402
	ldx     #$00
L0A52:	lda     _k
	jsr     mulax6
	clc
	adc     #<(_enemies)
	sta     ptr1
	txa
	adc     #>(_enemies)
	sta     ptr1+1
	ldy     #$03
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	cmp     _wi
	txa
	sbc     _wi+1
	bcs     L0923
	.dbg	line, "main.c", 404
	ldx     #$00
	lda     _k
	jsr     mulax6
	clc
	adc     #<(_enemies)
	sta     ptr1
	txa
	adc     #>(_enemies)
	sta     ptr1+1
	lda     _wi
	sta     (ptr1),y
	iny
	lda     _wi+1
	sta     (ptr1),y
	.dbg	line, "main.c", 406
L0923:	lda     _wi
	cmp     #$F7
	lda     _wi+1
	sbc     #$01
	bcc     L0A53
	.dbg	line, "main.c", 408
	ldx     #$00
	lda     _k
	jsr     mulax6
	clc
	adc     #<(_enemies)
	sta     ptr1
	txa
	adc     #>(_enemies)
	sta     ptr1+1
	lda     #$FF
	ldy     #$00
	sta     (ptr1),y
	iny
	lda     #$1F
	sta     (ptr1),y
	.dbg	line, "main.c", 410
L0A53:	inc     _k
	ldx     #$00
	lda     _k
	cmp     #$05
	bne     L0A52
	.dbg	line, "main.c", 411
	lda     _i
	cmp     #$17
	jcs     L095E
	.dbg	line, "main.c", 413
	clc
	adc     #$01
	bcc     L093B
	inx
L093B:	jsr     pushax
	lda     #$28
	jsr     tosumula0
	clc
	adc     #$01
	pha
	txa
	adc     #$C8
	tax
	pla
	jsr     pushax
	lda     #$29
	jsr     pusha0
	lda     #$26
	jsr     _memset
	.dbg	line, "main.c", 417
	jmp     L095E
L0A55:	lda     _state
	bne     L095E
	.dbg	line, "main.c", 419
	lda     _counter
	lsr     a
	lsr     a
	lsr     a
	and     #$07
	sta     _i
	.dbg	line, "main.c", 420
	ldx     #$DB
	lda     #$7B
	jsr     pushax
	ldy     _i
	lda     _blink,y
	jsr     pusha0
	lda     #$05
	jsr     _memset
	.dbg	line, "main.c", 421
	ldx     #$DB
	lda     #$86
	jsr     pushax
	ldy     _i
	lda     _blink,y
	jsr     pusha0
	lda     #$06
	jsr     _memset
	.dbg	line, "main.c", 422
	lda     _counter
	lsr     a
	lsr     a
	and     #$07
	sta     _i
	.dbg	line, "main.c", 423
	ldx     #$DB
	lda     #$81
	jsr     pushax
	ldy     _i
	lda     _blink,y
	jsr     pusha0
	lda     #$04
	jsr     _memset
	.dbg	line, "main.c", 424
	lda     _joy
	and     #$10
	beq     L095E
	.dbg	line, "main.c", 426
	lda     #$03
L0A6D:	sta     _state
	lda     #$00
	sta     _counter
	.dbg	line, "main.c", 429
L095E:	lda     _bx+1
	cmp     #$1F
	bne     L0A60
	lda     _bx
	cmp     #$FF
	jeq     L0992
	.dbg	line, "main.c", 431
L0A60:	lda     #$01
	jsr     pusha
	lda     _bx
	ldx     _bx+1
	jsr     _SPRITEX
	.dbg	line, "main.c", 432
	lda     _by
	sta     $D003
	.dbg	line, "main.c", 433
	lda     _bx
	cmp     #$4D
	lda     _bx+1
	sbc     #$01
	bcs     L0A56
	lda     _by
	cmp     #$F4
	lda     _by+1
	sbc     #$00
	bcc     L0A57
	.dbg	line, "main.c", 435
L0A56:	lda     $D015
	and     #$FD
	sta     $D015
	.dbg	line, "main.c", 436
	ldx     #$1F
	lda     #$FF
	sta     _bx
	stx     _bx+1
	.dbg	line, "main.c", 438
	jmp     L0992
	.dbg	line, "main.c", 440
L0A57:	lda     _bdir
	cmp     #$04
	bne     L0A58
	lda     _bx
	sec
	sbc     #$08
	sta     _bx
	bcs     L0992
	dec     _bx+1
	.dbg	line, "main.c", 441
	jmp     L0992
L0A58:	lda     _bdir
	cmp     #$08
	bne     L0A59
	clc
	adc     _bx
	sta     _bx
	bcc     L0992
	inc     _bx+1
	.dbg	line, "main.c", 442
	jmp     L0992
L0A59:	lda     _bdir
	cmp     #$01
	bne     L098D
	lda     _by
	sec
	sbc     #$08
	sta     _by
	bcs     L0992
	dec     _by+1
	.dbg	line, "main.c", 443
	jmp     L0992
L098D:	lda     #$08
	clc
	adc     _by
	sta     _by
	bcc     L0992
	inc     _by+1
	.dbg	line, "main.c", 446
L0992:	lda     #$00
	sta     _i
	.dbg	line, "main.c", 448
	tax
L0A5A:	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	sta     ptr1
	txa
	adc     #>(_enemies)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	cpx     #$1F
	bne     L0A61
	cmp     #$FF
	jeq     L099A
	.dbg	line, "main.c", 450
L0A61:	lda     _i
	clc
	adc     #$02
	jsr     pusha
	ldx     #$00
	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	sta     ptr1
	txa
	adc     #>(_enemies)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     shrax1
	jsr     _SPRITEX
	.dbg	line, "main.c", 451
	ldx     #$00
	lda     _i
	clc
	adc     #$02
	bcc     L09A6
	inx
L09A6:	jsr     shlax1
	clc
	adc     #$01
	pha
	txa
	adc     #$D0
	tax
	pla
	jsr     pushax
	ldx     #$00
	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	sta     ptr1
	txa
	adc     #>(_enemies)
	sta     ptr1+1
	ldy     #$03
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     shrax1
	ldy     #$00
	jsr     staspidx
	.dbg	line, "main.c", 452
	lda     _counter
	lsr     a
	lsr     a
	lsr     a
	and     #$03
	sta     _j
	.dbg	line, "main.c", 453
	ldx     #$00
	lda     _i
	clc
	adc     #$02
	bcc     L0A30
	inx
	clc
L0A30:	adc     #$F8
	sta     ptr1
	txa
	adc     #$CB
	sta     ptr1+1
	lda     _j
	clc
	adc     #$13
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "main.c", 454
	lda     _counter
	ldx     #$00
	and     #$03
	jne     L0A5B
	.dbg	line, "main.c", 456
	lda     _px
	ldx     _px+1
	jsr     pushax
	ldx     #$00
	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	sta     ptr1
	txa
	adc     #>(_enemies)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     tosicmp
	bcs     L09BD
	.dbg	line, "main.c", 458
	ldx     #$00
	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	tay
	txa
	adc     #>(_enemies)
	tax
	tya
	ldy     #$04
	jsr     ldaidx
	sec
	sbc     #$FF
	bvs     L09C0
	eor     #$80
L09C0:	bpl     L09BD
	ldx     #$00
	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	sta     ptr1
	txa
	adc     #>(_enemies)
	sta     ptr1+1
	lda     (ptr1),y
	sec
	sbc     #$01
	sta     (ptr1),y
	.dbg	line, "main.c", 460
L09BD:	lda     _px
	ldx     _px+1
	jsr     pushax
	ldx     #$00
	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	sta     ptr1
	txa
	adc     #>(_enemies)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     tosicmp
	bcc     L09C6
	beq     L09C6
	.dbg	line, "main.c", 462
	ldx     #$00
	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	tay
	txa
	adc     #>(_enemies)
	tax
	tya
	ldy     #$04
	jsr     ldaidx
	sec
	sbc     #$02
	bvc     L09C9
	eor     #$80
L09C9:	bpl     L09C6
	ldx     #$00
	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	sta     ptr1
	txa
	adc     #>(_enemies)
	sta     ptr1+1
	lda     #$01
	clc
	adc     (ptr1),y
	sta     (ptr1),y
	.dbg	line, "main.c", 464
L09C6:	lda     _py
	ldx     _py+1
	jsr     pushax
	ldx     #$00
	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	sta     ptr1
	txa
	adc     #>(_enemies)
	sta     ptr1+1
	ldy     #$03
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     tosicmp
	bcs     L09CF
	.dbg	line, "main.c", 466
	ldx     #$00
	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	tay
	txa
	adc     #>(_enemies)
	tax
	tya
	ldy     #$05
	jsr     ldaidx
	sec
	sbc     #$FF
	bvs     L09D2
	eor     #$80
L09D2:	bpl     L09CF
	ldx     #$00
	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	sta     ptr1
	txa
	adc     #>(_enemies)
	sta     ptr1+1
	lda     (ptr1),y
	sec
	sbc     #$01
	sta     (ptr1),y
	.dbg	line, "main.c", 468
L09CF:	lda     _py
	ldx     _py+1
	jsr     pushax
	ldx     #$00
	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	sta     ptr1
	txa
	adc     #>(_enemies)
	sta     ptr1+1
	ldy     #$03
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     tosicmp
	bcc     L09D8
	beq     L09D8
	.dbg	line, "main.c", 470
	ldx     #$00
	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	tay
	txa
	adc     #>(_enemies)
	tax
	tya
	ldy     #$05
	jsr     ldaidx
	sec
	sbc     #$02
	bvc     L09DB
	eor     #$80
L09DB:	asl     a
	ldx     #$00
	bcc     L0A5B
	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	sta     ptr1
	txa
	adc     #>(_enemies)
	sta     ptr1+1
	lda     #$01
	clc
	adc     (ptr1),y
	sta     (ptr1),y
	.dbg	line, "main.c", 473
L09D8:	ldx     #$00
L0A5B:	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	tay
	txa
	adc     #>(_enemies)
	tax
	tya
	jsr     pushax
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     pushax
	ldx     #$00
	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	tay
	txa
	adc     #>(_enemies)
	tax
	tya
	ldy     #$04
	jsr     ldaidx
	jsr     tosaddax
	ldy     #$00
	jsr     staxspidx
	.dbg	line, "main.c", 474
	ldx     #$00
	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	tay
	txa
	adc     #>(_enemies)
	tax
	tya
	jsr     pushax
	sta     ptr1
	stx     ptr1+1
	ldy     #$03
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     pushax
	ldx     #$00
	lda     _i
	jsr     mulax6
	clc
	adc     #<(_enemies)
	tay
	txa
	adc     #>(_enemies)
	tax
	tya
	ldy     #$05
	jsr     ldaidx
	jsr     tosaddax
	ldy     #$02
	jsr     staxspidx
	.dbg	line, "main.c", 476
L099A:	inc     _i
	ldx     #$00
	lda     _i
	cmp     #$05
	jne     L0A5A
	.dbg	line, "main.c", 478
	lda     _score
	cmp     _show_score
	beq     L0A5D
	.dbg	line, "main.c", 480
	lda     _show_score
	cmp     _score
	bcs     L0A5C
	inc     _show_score
	jmp     L0A2C
L0A5C:	dec     _show_score
	.dbg	line, "main.c", 481
L0A2C:	jsr     decsp2
	lda     #$09
	ldy     #$01
	sta     (sp),y
	lda     #$18
	dey
	sta     (sp),y
	lda     _show_score
	jsr     _print_number
	.dbg	line, "main.c", 483
L0A5D:	lda     _hiscore
	cmp     _show_hiscore
	jeq     L0A32
	.dbg	line, "main.c", 485
	lda     _show_hiscore
	cmp     _hiscore
	bcs     L0A5E
	inc     _show_hiscore
	jmp     L0A2D
L0A5E:	dec     _show_hiscore
	.dbg	line, "main.c", 486
L0A2D:	jsr     decsp2
	lda     #$1F
	ldy     #$01
	sta     (sp),y
	lda     #$18
	dey
	sta     (sp),y
	lda     _show_hiscore
	jsr     _print_number
	.dbg	line, "main.c", 488
	jmp     L0A32
	.dbg	line

.endproc

